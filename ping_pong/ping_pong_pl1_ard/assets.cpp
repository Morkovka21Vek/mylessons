#include "assets.h"

char getSymbolCh (char ch, int x, int y) {
	char out = 'E';


	const char zeroChar[6][4] = {
		{'0', '0', '0', '0'},
		{'0', ' ', ' ', '0'},
		{'0', ' ', ' ', '0'},
		{'0', ' ', ' ', '0'},
		{'0', ' ', ' ', '0'},
		{'0', '0', '0', '0'}
	};


	const char oneChar[6][4] = {
		{' ', '1', '1', ' '},
		{' ', '1', '1', ' '},
		{' ', '1', '1', ' '},
		{' ', '1', '1', ' '},
		{' ', '1', '1', ' '},
		{' ', '1', '1', ' '}
	};

	const char twoChar[6][4] = {
		{'2', '2', '2', '2'},
		{' ', ' ', ' ', '2'},
		{'2', '2', '2', '2'},
		{'2', ' ', ' ', ' '},
		{'2', ' ', ' ', ' '},
		{'2', '2', '2', '2'}
	};

	const char threeChar[6][4] = {
		{'3', '3', '3', '3'},
		{' ', ' ', ' ', '3'},
		{'3', '3', '3', '3'},
		{' ', ' ', ' ', '3'},
		{' ', ' ', ' ', '3'},
		{'3', '3', '3', '3'}
	};

	const char colonChar[6][4] = {
		{' ', '#', '#', ' '},
		{' ', '#', '#', ' '},
		{' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' '},
		{' ', '#', '#', ' '},
		{' ', '#', '#', ' '}
	};

	const char ballChar[5][9] = {
		{' ', ' ', ' ', '#', '#', '#', ' ', ' ', ' '},
		{' ', '#', '#', '#', '#', '#', '#', '#', ' '},
		{'#', '#', '#', '#', '#', '#', '#', '#', '#'},
		{' ', '#', '#', '#', '#', '#', '#', '#', ' '},
		{' ', ' ', ' ', '#', '#', '#', ' ', ' ', ' '},
	};

	const char Pchar[6][4] = {
		{'P', 'P', 'P', ' '},
		{'P', ' ', ' ', 'P'},
		{'P', 'P', 'P', ' '},
		{'P', ' ', ' ', ' '},
		{'P', ' ', ' ', ' '},
		{'P', ' ', ' ', ' '}
	};

	const char Lchar[6][4] = {
		{'L', ' ', ' ', ' '},
		{'L', ' ', ' ', ' '},
		{'L', ' ', ' ', ' '},
		{'L', ' ', ' ', ' '},
		{'L', ' ', ' ', ' '},
		{'L', 'L', 'L', 'L'}
	};

	const char Achar[6][4] = {
		{' ', 'A', 'A', ' '},
		{'A', ' ', ' ', 'A'},
		{'A', ' ', ' ', 'A'},
		{'A', 'A', 'A', 'A'},
		{'A', ' ', ' ', 'A'},
		{'A', ' ', ' ', 'A'}
	};

	const char Ychar[6][4] = {
		{'Y', ' ', ' ', 'Y'},
		{' ', 'Y', 'Y', ' '},
		{' ', 'Y', 'Y', ' '},
		{' ', 'Y', 'Y', ' '},
		{' ', 'Y', 'Y', ' '},
		{' ', 'Y', 'Y', ' '}
	};

	const char Echar[6][4] = {
		{'E', 'E', 'E', 'E'},
		{'E', ' ', ' ', ' '},
		{'E', 'E', 'E', 'E'},
		{'E', ' ', ' ', ' '},
		{'E', ' ', ' ', ' '},
		{'E', 'E', 'E', 'E'}
	};

	const char Rchar[6][4] = {
		{'R', 'R', 'R', ' '},
		{'R', ' ', ' ', 'R'},
		{'R', 'R', 'R', ' '},
		{'R', 'R', ' ', ' '},
		{'R', ' ', 'R', ' '},
		{'R', ' ', ' ', 'R'}
	};

	const char Ochar[6][4] = {
		{' ', 'O', 'O', ' '},
		{'O', ' ', ' ', 'O'},
		{'O', ' ', ' ', 'O'},
		{'O', ' ', ' ', 'O'},
		{'O', ' ', ' ', 'O'},
		{' ', 'O', 'O', ' '}
	};

	const char Ichar[6][4] = {
		{'I', 'I', 'I', 'I'},
		{' ', 'I', 'I', ' '},
		{' ', 'I', 'I', ' '},
		{' ', 'I', 'I', ' '},
		{' ', 'I', 'I', ' '},
		{'I', 'I', 'I', 'I'}
	};

	const char Nchar[6][4] = {
		{'N', ' ', ' ', 'N'},
		{'N', 'N', ' ', 'N'},
		{'N', 'N', ' ', 'N'},
		{'N', ' ', 'N', 'N'},
		{'N', ' ', 'N', 'N'},
		{'N', ' ', ' ', 'N'}
	};

	const char Tchar[6][4] = {
		{'T', 'T', 'T', 'T'},
		{' ', 'T', 'T', ' '},
		{' ', 'T', 'T', ' '},
		{' ', 'T', 'T', ' '},
		{' ', 'T', 'T', ' '},
		{' ', 'T', 'T', ' '}
	};

	const char Wchar[5][5] = {
		{'W', ' ', 'W', ' ', 'W'},
		{'W', ' ', 'W', ' ', 'W'},
		{'W', ' ', 'W', ' ', 'W'},
		{' ', 'W', ' ', 'W', ' '},
		{' ', 'W', ' ', 'W', ' '},
	};


	const char plusChar[6][6] = {
		{' ', ' ', '+', '+', ' ', ' '},
		{' ', ' ', '+', '+', ' ', ' '},
		{'+', '+', '+', '+', '+', '+'},
		{'+', '+', '+', '+', '+', '+'},
		{' ', ' ', '+', '+', ' ', ' '},
		{' ', ' ', '+', '+', ' ', ' '}
	};

	switch (ch) {
		case '0': out = zeroChar[y][x]; break;
		case '1': out = oneChar[y][x]; break;
		case '2': out = twoChar[y][x]; break;
		case '3': out = threeChar[y][x]; break;
		case ':': out = colonChar[y][x]; break;
		case 'b': out = ballChar[y][x]; break;
		case 'P': out = Pchar[y][x]; break;
		case 'L': out = Lchar[y][x]; break;
		case 'A': out = Achar[y][x]; break;
		case 'Y': out = Ychar[y][x]; break;
		case 'E': out = Echar[y][x]; break;
		case 'R': out = Rchar[y][x]; break;
		case 'O': out = Ochar[y][x]; break;
		case 'I': out = Ichar[y][x]; break;
		case 'N': out = Nchar[y][x]; break;
		case 'T': out = Tchar[y][x]; break;
		case 'W': out = Wchar[y][x]; break;
		case '+': out = plusChar[y][x]; break;
	}
	return out;
}
